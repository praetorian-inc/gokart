# Copyright 2020 Praetorian Security, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Used as inspiration: https://github.com/caddyserver/caddy/blob/master/.github/workflows/ci.yml

name: CI

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.19

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Print Go version and environment
      id: vars
      run: |
        printf "Using go at: $(which go)\n"
        printf "Go version: $(go version)\n"
        printf "\n\nGo environment:\n\n"
        go env
        printf "\n\nSystem environment:\n\n"
        env
        # Calculate the short SHA1 hash of the git commit
        echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
        echo "::set-output name=go_cache::$(go env GOCACHE)"

    # - name: Cache the build cache
    #   uses: actions/cache@v2
    #   with:
    #     path: ${{ steps.vars.outputs.go_cache }}
    #     key: ${{ runner.os }}-go-ci-${{ hashFiles('**/go.sum') }}
    #     restore-keys: |
    #       ${{ runner.os }}-go-ci

    - name: Get dependencies
      run: |
        go mod download
    
    - name: Build all binaries
      env:
        CGO_ENABLED: 0
      run: |
        go build

    # Commented bits below were useful to allow the job to continue
    # even if the tests fail, so we can publish the report separately
    # For info about set-output, see https://stackoverflow.com/questions/57850553/github-actions-check-steps-status
    - name: Run tests
      # id: step_test
      # continue-on-error: true
      run: |
        go test -v ./...

  # From https://github.com/reviewdog/action-golangci-lint
#  golangci-lint:
#    name: golangci-lint
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code into the Go module directory
#        uses: actions/checkout@v2
#
#      - name: Run golangci-lint
#        uses: reviewdog/action-golangci-lint@v1
#        # uses: docker://reviewdog/action-golangci-lint:v1 # pre-build docker image
#        with:
#          github_token: ${{ secrets.github_token }}
#
#  goreleaser-check:
#    runs-on: ubuntu-latest
#    steps:
#      - name: checkout
#        uses: actions/checkout@v2
#      - uses: goreleaser/goreleaser-action@v2
#        with:
#          version: latest
#          args: check
#        env:
#          TAG: ${{ steps.vars.outputs.version_tag }}
#
